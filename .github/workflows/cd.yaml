name: CD
on:
  push:
    branches:
      - "main"
      - parallelize-builds
concurrency:
  # Only run the latest workflow.
  # If a build is already happening, cancel it to avoid a race
  # condition where an older image overwrites a newer one.
  group: ${{ github.workflow }}
  cancel-in-progress: true
jobs:
  build:
    name: Build [rdwatch] (${{ matrix.platform }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get image name
        uses: actions/github-script@v6
        id: image-name
        with:
          result-encoding: string
          script: return 'ghcr.io/${{ github.repository }}'.toLowerCase() + '/rdwatch'
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image-name.outputs.result }}
      - name: Set up QEMU
        if: ${{ matrix.platform == 'linux/arm64' }}
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          platforms: ${{ matrix.platform }}
          push: false  # defer until next job
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ steps.image-name.outputs.result }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    name: Merge digests and push images
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Get image name
        uses: actions/github-script@v6
        id: image-name
        with:
          result-encoding: string
          script: return 'ghcr.io/${{ github.repository }}'.toLowerCase() + '/rdwatch'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image-name.outputs.result }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")') \
            $(printf '${{ steps.image-name.outputs.result }}:latest@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ steps.image-name.outputs.result }}

  publish-cli:
    name: Build [rdwatch-cli]
    runs-on: ubuntu-latest
    steps:
      - name: Install system dependencies
        run: apt-fast install --no-install-recommends --yes
          libgdal30
          libproj22
          python3-cachecontrol
          python3-dev
          python3-poetry
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"
          cache-dependency-path: "cli/poetry.lock"
      - name: Build rdwatch-cli
        run: poetry build
        working-directory: cli
      - name: Make package index
        uses: girder/create-pip-index-action@main
        with:
          package_directory: cli/dist/
      - name: Deploy to GH Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: cli/dist/
